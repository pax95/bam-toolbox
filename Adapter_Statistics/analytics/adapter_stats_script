CREATE EXTERNAL TABLE IF NOT EXISTS AdapterStats (key STRING, adapter STRING,messageid STRING, sizeInBytes BIGINT, payload_timestamp BIGINT) 
STORED BY 
'org.apache.hadoop.hive.cassandra.CassandraStorageHandler' WITH SERDEPROPERTIES ( "cassandra.host" = "127.0.0.1",
"cassandra.port" = "9160","cassandra.ks.name" = "EVENT_KS",
"cassandra.ks.username" = "admin","cassandra.ks.password" = "admin",
"cassandra.cf.name" = "adapter_service_data_publisher",
"cassandra.columns.mapping" = ":key,payload_adapter,payload_messageid,payload_sizeInBytes,payload_timestamp" );    

CREATE EXTERNAL TABLE IF NOT EXISTS AdapterStatsPerHour(adapter STRING, total_messages BIGINT, avg_size DOUBLE, min_size DOUBLE, max_size DOUBLE, sum_size DOUBLE, year SMALLINT, month SMALLINT,day SMALLINT, hour SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'mapred.jdbc.driver.class' = 'oracle.jdbc.driver.OracleDriver',
'mapred.jdbc.url' = 'jdbc:oracle:thin:@intautstdb:1598:intautst',
'mapred.jdbc.username' = 'intaq','mapred.jdbc.password' = 'intaq',
'hive.jdbc.update.on.duplicate' = 'true',
'hive.jdbc.primary.key.fields' = 'adapter,year,month,day,hour',
'hive.jdbc.table.create.query' = 'CREATE TABLE ADAPTER_SUMMARY_PER_HOUR ( adapter VARCHAR(100) NOT NULL, total_messages NUMBER(19, 0), avg_size DOUBLE PRECISION, min_size DOUBLE PRECISION, max_size DOUBLE PRECISION, sum_size DOUBLE PRECISION, year SMALLINT, month SMALLINT, day SMALLINT, hour SMALLINT, time VARCHAR(30))' );

insert overwrite table AdapterStatsPerHour select adapter, count(adapter), avg(sizeInBytes), min(sizeInBytes),  max(sizeInBytes), sum(sizeInBytes),
year(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )) as year, 
month(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )) as month,
day(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )) as day,
hour(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )) as hour, 
concat(substring(from_unixtime(cast(payload_timestamp/1000 as BIGINT), 'yyyy-MM-dd HH:mm:ss'),0,13),':00:00') as time 
from AdapterStats 
group by 
adapter,
year(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )), 
month(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )),
day(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )),
hour(from_unixtime(cast(payload_timestamp/1000 as BIGINT),'yyyy-MM-dd HH:mm:ss.SSS' )),
substring(from_unixtime(cast(payload_timestamp/1000 as BIGINT), 'yyyy-MM-dd HH:mm:ss'),0,13);             

CREATE EXTERNAL TABLE IF NOT EXISTS AdapterStatsPerHourDataFetcher (adapter STRING, total_messages BIGINT, avg_size DOUBLE, min_size DOUBLE, max_size DOUBLE, sum_size DOUBLE, year SMALLINT, month SMALLINT, day SMALLINT, hour SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'mapred.jdbc.driver.class' = 'oracle.jdbc.driver.OracleDriver',
'mapred.jdbc.url' = 'jdbc:oracle:thin:@intautstdb:1598:intautst',
'mapred.jdbc.username' = 'intaq','mapred.jdbc.password' = 'intaq',
'mapred.jdbc.input.table.name' = 'ADAPTER_SUMMARY_PER_HOUR' );

CREATE EXTERNAL TABLE IF NOT EXISTS AdapterStatsPerDay(adapter STRING, total_messages BIGINT, avg_size DOUBLE, min_size DOUBLE, max_size DOUBLE, sum_size DOUBLE, year SMALLINT, month SMALLINT,day SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'mapred.jdbc.driver.class' = 'oracle.jdbc.driver.OracleDriver',
'mapred.jdbc.url' = 'jdbc:oracle:thin:@intautstdb:1598:intautst',
'mapred.jdbc.username' = 'intaq','mapred.jdbc.password' = 'intaq',
'hive.jdbc.update.on.duplicate' = 'true',
'hive.jdbc.primary.key.fields' = 'adapter,year,month,day',
'hive.jdbc.table.create.query' = 'CREATE TABLE ADAPTER_SUMMARY_PER_DAY ( adapter VARCHAR(100) NOT NULL, total_messages NUMBER(19, 0), avg_size DOUBLE PRECISION, min_size DOUBLE PRECISION, max_size DOUBLE PRECISION, sum_size DOUBLE PRECISION, year SMALLINT, month SMALLINT, day SMALLINT, time VARCHAR(30))' );

insert overwrite table AdapterStatsPerDay select adapter, sum(total_messages), avg(avg_size), min(min_size), max(max_size), sum(sum_size),
year, 
month,
day,
substr(time,0,10) as time
from AdapterStatsPerHourDataFetcher
group by 
adapter,
year, 
month,
day,
substr(time,0,10);
                                    
                                
CREATE EXTERNAL TABLE IF NOT EXISTS AdapterStatsPerMonth (adapter STRING, total_messages INT, avg_size DOUBLE, min_size DOUBLE, max_size DOUBLE, sum_size DOUBLE, year SMALLINT,month SMALLINT, time STRING) 
STORED BY 'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler' TBLPROPERTIES ( 
'mapred.jdbc.driver.class' = 'oracle.jdbc.driver.OracleDriver',
'mapred.jdbc.url' = 'jdbc:oracle:thin:@intautstdb:1598:intautst',
'mapred.jdbc.username' = 'intaq','mapred.jdbc.password' = 'intaq',
'hive.jdbc.update.on.duplicate' = 'true',
'hive.jdbc.primary.key.fields' = 'adapter,year,month',
'hive.jdbc.table.create.query' = 'CREATE TABLE ADAPTER_SUMMARY_PER_MONTH ( adapter VARCHAR(100) NOT NULL, total_messages NUMBER(19, 0), avg_size DOUBLE PRECISION, min_size DOUBLE PRECISION, max_size DOUBLE PRECISION, sum_size DOUBLE PRECISION, year SMALLINT, month SMALLINT, time VARCHAR(30))' );

insert overwrite table AdapterStatsPerMonth select adapter, sum(total_messages), avg(avg_size), min(min_size), max(max_size), sum(sum_size),
year, 
month,
substr(time,0,7) as time
from AdapterStatsPerHourDataFetcher 
group by adapter, 
year, 
month,
substr(time,0,7);